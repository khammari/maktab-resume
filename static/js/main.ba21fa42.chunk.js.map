{"version":3,"sources":["components/Fullpage.js","components/DownIcon.js","sections/TitleSection.js","sections/AboutSection.js","components/Card.js","sections/SkillsSection.js","App.js","serviceWorker.js","index.js"],"names":["Fullpage","children","this","props","divStyle","backgroundColor","color","react_default","a","createElement","id","className","concat","style","Component","DownIcon","onClick","display","flexDirection","alignItems","justifyContent","marginBottom","transform","width","alt","icon","src","TitleSection","src_components_Fullpage","data","title","subtitle","Object","keys","links","map","key","react_social_icons","url","modules","activeClass","to","spy","smooth","offset","duration","delay","components_DownIcon","icons","down","onClik","console","log","name","AboutSection","sections","items","p","content","Card","pic","SkillsSection","skills","src_components_Card","image","colors","App","state","first","second","third","changeColor","firstC","Math","floor","random","length","secondC","thirdC","_this","setState","Navbar","inverse","fixedTop","collapseOnSelect","Header","Brand","href","Toggle","Collapse","Nav","NavItem","eventKey","pullRight","src_sections_TitleSection","src_sections_AboutSection","src_sections_SkillsSection","lib_default","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ba21fa42.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './Fullpage.css'\r\nclass Fullpage extends Component {\r\n    render() {\r\n        const {children} = this.props;\r\n        const divStyle = {\r\n            backgroundColor : this.props.color\r\n        };\r\n        return (\r\n            <div id={this.props.id} className={`fullpage ${this.props.className || ''}`} style={divStyle}>\r\n                {children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Fullpage;","import React, {Component} from \"react\";\r\n\r\nconst DownIcon = (props) => {\r\n    return (\r\n        <div\r\n        onClick={props.onClick}\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          marginBottom: \"-34px\",\r\n          transform: \"translateY(-45px)\"\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            width: \"30px\"\r\n          }}\r\n        >\r\n          <img alt={props.icon} src={props.icon} style={{\r\n            width: \"30px\"\r\n          }}/>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default DownIcon;","import React, { Component } from \"react\";\r\nimport { SocialIcon } from \"react-social-icons\";\r\nimport { Link, Element } from \"react-scroll\";\r\nimport FullPage from \"../components/Fullpage\";\r\nimport DownIcon from \"../components/DownIcon\";\r\nimport data from \"../data.json\";\r\nimport \"./TitleSection.css\";\r\nclass TitleSection extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <FullPage id={\"first\"} className=\"first\" color={this.props.color}>\r\n          <h1 className=\"title\">{data.title}</h1>\r\n          <div>\r\n            <h2>{data.subtitle}</h2>\r\n          </div>\r\n          <div className=\"icon-wrapper\">\r\n            {Object.keys(data.links).map(key => {\r\n              return (\r\n                <div className=\"icon\">\r\n                  <SocialIcon url={data.links[key]} />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </FullPage>\r\n        <Link\r\n          activeClass=\"active\"\r\n          to=\"about\"\r\n          spy={true}\r\n          smooth={true}\r\n          offset={50}\r\n          duration={500}\r\n          delay={5}\r\n        >\r\n          <DownIcon icon={data.icons.down} onClik={() => console.log(\"sd\")} />\r\n        </Link>\r\n        <Element name=\"about\" className=\"element\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TitleSection;\r\n","import React, { Component } from \"react\";\r\nimport FullPage from \"../components/Fullpage\";\r\nimport data from \"../data.json\";\r\nimport './AboutSection.css'\r\nclass AboutSection extends Component {\r\n  render() {\r\n    return (\r\n      <FullPage id={\"second\"} className={\"second\"} color={this.props.color}>\r\n        <h3>{data.sections[0].title}</h3>\r\n        <div className=\"paragraphs\">\r\n          {data.sections[0].items.map(p => {\r\n            return <p>{p.content}</p>;\r\n          })}\r\n        </div>\r\n      </FullPage>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AboutSection;\r\n","import React, {Component} from 'react';\r\nimport './Card.css'\r\nclass Card extends Component {\r\n    render() {\r\n        const {children} = this.props;\r\n        return (\r\n            <div className={`col ${this.props.className || ''}`}>\r\n                <img alt={this.props.title} src={this.props.pic}/>\r\n                <br/>\r\n                <br/>\r\n                <p>{this.props.title}</p>\r\n                {children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Card;","import React, { Component } from \"react\";\r\nimport FullPage from \"../components/Fullpage\";\r\nimport data from \"../data.json\";\r\nimport Card from \"../components/Card\"\r\nimport './SkillsSection.css'\r\nclass SkillsSection extends Component {\r\n  render() {\r\n    return (\r\n      <FullPage id={\"third\"} className={\"third\"} color={this.props.color}>\r\n        <h3>{data.sections[1].title}</h3>\r\n        <div className=\"flex-grid-thirds\">\r\n          {data.sections[1].items.map(skills => {\r\n            return (\r\n              <Card title={skills.content.title} pic={skills.content.image} />\r\n            );\r\n          })}\r\n        </div>\r\n      </FullPage>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SkillsSection;\r\n","import React, {Component} from 'react';\r\nimport {Nav, Navbar, NavItem} from 'react-bootstrap';\r\nimport SnowStorm from \"react-snowstorm\";\r\nimport TitleSection from './sections/TitleSection'\r\nimport AboutSection from './sections/AboutSection';\r\nimport SkillsSection from './sections/SkillsSection';\r\nimport './App.css';\r\n\r\nlet colors = [\"burlywood\", \"darksalmon\", \"bisque\", \"coral\", \"darkgoldenrod\", \"darkkhaki\", \"lightcoral\"];\r\n\r\n    class App extends Component {\r\n        state = {\r\n            first: \"burlywood\",\r\n            second: \"darksalmon\",\r\n            third: \"bisque\"\r\n        };\r\n\r\n        changeColor = () => {\r\n            let firstC = Math.floor(Math.random() * (Math.floor(colors.length) + 1));\r\n            let secondC = Math.floor(Math.random() * (Math.floor(colors.length) + 1));\r\n            let thirdC = Math.floor(Math.random() * (Math.floor(colors.length) + 1));\r\n\r\n            this.setState(state => ({\r\n                first: colors[firstC],\r\n                second: colors[secondC],\r\n                third: colors[thirdC]\r\n            }))\r\n        };\r\n\r\n        render() {\r\n            return (\r\n                <div className=\"App\">\r\n                    <Navbar inverse fixedTop collapseOnSelect>\r\n                        <Navbar.Header>\r\n                            <Navbar.Brand>\r\n                                <a href=\"#first\">React-Resume</a>\r\n                            </Navbar.Brand>\r\n                            <Navbar.Toggle/>\r\n                        </Navbar.Header>\r\n                        <Navbar.Collapse>\r\n                            <Nav>\r\n                                <NavItem eventKey={1} href=\"#first\">\r\n                                    Start\r\n                                </NavItem>\r\n                                <NavItem eventKey={2} href=\"#second\">\r\n                                    About\r\n                                </NavItem>\r\n                                <NavItem eventKey={2} href=\"#third\">\r\n                                    Skills\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Nav pullRight>\r\n                                <NavItem eventKey={1} href=\"#\" onClick={this.changeColor}>\r\n                                    Click me!\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Navbar.Collapse>\r\n                    </Navbar>\r\n                    <TitleSection id={\"first\"} className=\"first\" color={this.state.first}/>\r\n                    <AboutSection id={\"second\"} className={\"second\"} color={this.state.second}/>\r\n                    <SkillsSection id={\"third\"} className={\"third\"} color={this.state.third}/>\r\n                    <SnowStorm/>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}